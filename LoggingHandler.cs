using System;
using System.IO;
using System.Linq;
using System.Net.Http;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using k8s;
using McMaster.Extensions.CommandLineUtils;
using Newtonsoft.Json.Linq;

namespace Container.Vulnerability.Agent.K8s
{

    public class LoggingHandler : DelegatingHandler
    {
        private readonly bool _verbose;

        public LoggingHandler(HttpMessageHandler innerHandler, bool verbose)
        : base(innerHandler)
        {
            _verbose = verbose;
        }

        protected override async Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)
        {
            if (_verbose)
            {
                Console.WriteLine("Request:");
                Console.WriteLine(request.ToString());
                if (request.Content != null)
                {
                    Console.WriteLine(await request.Content.ReadAsStringAsync());
                }
                Console.WriteLine();
            }

            HttpResponseMessage response = await base.SendAsync(request, cancellationToken);

            if(_verbose)
            {
                Console.WriteLine("Response:");
                Console.WriteLine(response.ToString());
                if (response.Content != null)
                {
                    Console.WriteLine(await response.Content.ReadAsStringAsync());
                }
                Console.WriteLine();
            }

            return response;
        }
    }
}
